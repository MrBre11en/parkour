////////////////////////////////////////////////////////////////////////////////
// Filename: entity.h
////////////////////////////////////////////////////////////////////////////////
#ifndef _ENTITY_H_
#define _ENTITY_H_

//////////////
// INCLUDES //
//////////////
#include <typeindex>
#include <unordered_map>
#include "component.h"

////////////////////////////////////////////////////////////////////////////////
// Class name: Entity
////////////////////////////////////////////////////////////////////////////////
class Entity
{
public:
	Entity();

	template <typename T>
	void AddComponent(T* component);
	template <typename T>
	void RemoveComponent();
	template <typename T>
	T* GetComponent();
	template <typename T>
	bool HasComponent();
private:
	unordered_map<type_index, Component*> components;
};

#endif